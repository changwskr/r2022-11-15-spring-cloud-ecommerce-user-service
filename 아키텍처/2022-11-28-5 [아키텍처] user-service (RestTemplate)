
여기서 중요하게 생각할 점은
타서비스를 호출을 위해 resttemplate를 사용하고
resttemplate에서 로드밸런스 기능을 활성화 하기 위해 @loadbalanced를 사용했다는 점이다.


● RestTemplate 을 활용해서 UserService에서 OrderSerice를 요청해보자
   실제 요청 환경정보를 user-service.yml에서 등록해서 사용한다.
   RestTemplate 빈의 정보는 main 클래스에 등록한다.

	( Application.java)
	- Application에서 RestTemplate Bean으로 등록

			public class Application {
				
				// 여기서 등록된 빈들은 다른 객체에서 주입받아서 사용한다. IOC 좋구먼
			
			    public static void main(String[] args) {
			        SpringApplication.run(Application.class, args);
			    }			
			    /*
			     * 1번 방법 Bean 만을 선언해서 할 경우는 
			     * user-service.yml에서
			     * http:
			     */
			    @Bean     
			    @LoadBalanced
			    public RestTemplate getRestTemplate() { 
			        return new RestTemplate();
			    }			
			}

	(UserServiceImpl.java)			
	- getUserByUserId(String userId)
		- String orderUrl = String.format(env.getProperty("order_service.url"), userId);

	
	(User-Service.yml)
		- 2022-11-17-spring-cloud-config-native-repository
			- user-service.yml
				등록
				.order_service:
				  url: http://ORDER-SERVICE/order-service/%s/orders
				  exception:
				    order_is_empty: User's orders is empty.(#####)
				 	

	(UserController.java)
					
		